- name: Download wabnet image
  aws_s3:
    bucket: bsve-integration
    object: wabnet.tar.gz
    dest: /tmp/wabnet.tar.gz
    mode: get
    overwrite: "{{overwrite}}"
  register: image

- when: image.changed
  block:
  - command: "gzip -dfk /tmp/wabnet.tar.gz"
  - name: Load image into docker
    shell: "docker load < /tmp/wabnet.tar"

- name: Copy compose directory
  synchronize: src="compose/" dest="/wabnet-compose"

- name: Create db directory
  file: path="/shared/wabnet" state=directory

- name: Create media directory
  file: path="/shared/wabnet-media" state=directory

- name: Start wabnet
  docker_service:
    project_src: /wabnet-compose
  environment:
    ip_address: "{{ ansible_default_ipv4.address }}"
    aws_smtp_user: "{{ aws_smtp_user }}"
    aws_smtp_password: "{{ aws_smtp_password }}"
    SECRET_KEY: "{{ DJANGO_SECRET_KEY }}"
    EC5_PROJECT_NAME: "{{ EC5_PROJECT_NAME }}"
    EC5_SECRET_KEY: "{{ EC5_SECRET_KEY }}"
    EC5_CLIENT_ID: "{{ EC5_CLIENT_ID }}"

- name: Create wabnet sync cronjob
  cron:
    name: "Sync wabnet data"
    minute: "7"
    job: "curl localhost:6080/sync"
