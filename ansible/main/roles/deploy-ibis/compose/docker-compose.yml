version: '2'
services:
  ibis:
    container_name: ibis
    image: ibis
    environment:
      - "MONGO_URL=mongodb://flight-mongodb:27017/ibis"
      - "FLIGHT_MONGO_URL=mongodb://flight-mongodb:27017/flirt"
      - "SMTP_USER=${aws_smtp_user}"
      - "SMTP_PASSWORD=${aws_smtp_password}"
      - "MAIL_URL=smtps://${aws_smtp_user}:${aws_smtp_password}@email-smtp.us-east-1.amazonaws.com:465"
      - "MONGO_HOST=mongodb://flight-mongodb:27017/"
      - "SCORE_API=http://ibis-score-api:80"
    ports:
      - "5080:80"
    restart: unless-stopped
    volumes:
      - /shared/ibis:/shared:ro
    networks:
      - main

  flight-mongodb:
    container_name: flight-mongodb
    # 4 GB
    mem_limit: 4000000000
    image: mongo:3.4.9
    restart: unless-stopped
    ports:
      - 27019:27017
    logging:
      options:
        max-size: 50m
    networks:
      - main
      - ssh_tunnel

  ibis-redis:
    image: redis
    container_name: ibis-redis
    restart: always
    # Leave port open for external workers
    # ports:
    #   - 6379:6379
    logging:
      options:
        max-size: 50m
    networks:
      - main
      - ssh_tunnel

  ibis-score-api:
    image: ibis-score-api
    container_name: ibis-score-api
    restart: always
    # open a port for debugging
    ports:
      - "5081:80"
    logging:
      options:
        max-size: 50m
    environment:
      WORKER_MODE: 'false'
      MONGO_HOST: 'mongodb://flight-mongodb:27017'
      BROKER_URL: 'redis://ibis-redis:6379/0'
    networks:
      - main

networks:
  main:
  ssh_tunnel:
    external:
      name: sshd_tunnel