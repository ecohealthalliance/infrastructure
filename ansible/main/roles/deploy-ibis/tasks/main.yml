- name: Download ibis image
  aws_s3:
    bucket: bsve-integration
    object: ibis.tar.gz
    dest: /tmp/ibis.tar.gz
    mode: get
    overwrite: "{{overwrite}}"
  register: ibisimage

- when: ibisimage.changed
  block:
  - command: "gzip -dfk /tmp/ibis.tar.gz"
  - name: Load image into docker
    shell: "docker load < /tmp/ibis.tar"

- name: Copy image from github
  git:
    repo: "https://github.com/ecohealthalliance/ibis.git"
    dest: "/ibis"
    recursive: no
    force: yes

- name: Download GPW data
  command: aws s3 cp s3://eha-flirt/gpw-v4-population-count-rev10_2015_15_min_tif.zip /ibis/.scripts

- name: Install unzip
  apt: pkg=unzip state=installed
  
- command: unzip -o gpw-v4-population-count-rev10_2015_15_min_tif.zip -d score_api/gpw
  args:
    creates: /ibis/.scripts/score_api/gpw
    chdir: /ibis/.scripts

- name: Build IBIS score api image
  command: "docker build -t ibis-score-api /ibis/.scripts/score_api"

- file: path="/shared/ibis" state=directory

- name: Create sensitive-environment-vars.env
  copy: content="{{ ibis_sensitive_envvars }}" dest="/shared/ibis/sensitive-environment-vars.env" force=yes

- name: Create meteor settings.json
  copy:
    content: "{{ ibis_settings | to_json }}"
    dest: "/shared/ibis/settings-production.json"
    force: yes
  vars:
    ibis_settings:
      public:
        analyticsSettings:
          "Google Analytics":
            trackingId": "UA-54918272-10"
      private:
        initial_user:
          profile:
            name: "Admin"
          email: "{{ ibis_admin_email }}"

- name: Copy compose directory
  synchronize: src="compose/" dest="/ibis-compose"

- name: Start ibis services
  docker_service:
    project_src: /ibis-compose
  environment:
    ip_address: "{{ ansible_default_ipv4.address }}"
    aws_smtp_user: "{{ aws_smtp_user }}"
    aws_smtp_password: "{{ aws_smtp_password }}"

