- hosts: localhost
  become: yes
  become_method: sudo
  roles:
    - name: provision-instances
      instance_size: "c4.large"
      aws_security_group: temp-instances
      key_name: temp-instances
      instance_tag: "flight-processing-instance"
      host_group: ec2hosts
      tags: always
  vars_files:
    - my_secure.yml

- hosts: ec2hosts
  vars:
    # This private vpc ip must be used for security group source incoming
    # traffic rules to take effect.
    mongo_host: "172.30.2.108:27019"
    concurrency: 3
    start_date: "{{ansible_date_time.date}}"
    periods: 1
    # Pandas date_range frequency
    # http://pandas.pydata.org/pandas-docs/version/0.19.1/generated/pandas.date_range.html
    freq: '14D'
    sim_groups:
      - 'ibis14day'
    shutdown_minutes: 295
  roles:
    - name: init
      become: yes
      become_method: sudo
    - name: kamaln7.swapfile
      swapfile_size: 16GB
      swapfile_location: "/swapfile"
      become: yes
      become_method: sudo
      tags: swap
  pre_tasks:
    - name: Cancel prior shutdown commands
      shell: "shutdown -c || true"
    - name: "Shut down the instance in {{shutdown_minutes}} minutes (to cancel use shutdown -c)"
      shell: "shutdown -h +{{shutdown_minutes}} &"
  tasks:
    - file: path="/flirt-simulation-service" state=directory mode="a+rwx"
      become: yes
      become_user: root
    - name: Get get simulator code
      git:
        repo: "https://github.com/ecohealthalliance/flirt-simulation-service.git"
        dest: "/flirt-simulation-service"
        recursive: no
        force: yes
    - pip:
        virtualenv: /flirt-simulation-service/venv
        virtualenv_python: python
        requirements: /flirt-simulation-service/requirements.txt
    - pip:
        virtualenv: /flirt-simulation-service/venv
        virtualenv_python: python
        requirements: /flirt-simulation-service/simulator/requirements.pip
    - block:
      - name: Start workers
        shell: "/flirt-simulation-service/venv/bin/celery worker -A tasks --loglevel=INFO --concurrency={{concurrency}} -Q caching  > >(tee -a worker.log) 2> >(tee -a worker.error.log >&2)"
        async: 1000000000000000000000000000000
        poll: 0
        args:
          chdir: /flirt-simulation-service/simulator
      - name: Queue simulations and wait for them to complete
        shell: "/flirt-simulation-service/venv/bin/python cache_airport_flows_periodic.py --start_date {{start_date}} --sim_group {{item}} --periods {{periods}} --freq {{freq}}"
        args:
          chdir: /flirt-simulation-service
        with_items: "{{sim_groups}}"
      environment:
        MONGO_URI: "mongodb://{{mongo_host}}"
      become: yes
      become_user: root
    - name: "Terminate instance"
      shell: "shutdown -h 0"
      become: yes
      become_user: root
  vars_files:
    - my_secure.yml
